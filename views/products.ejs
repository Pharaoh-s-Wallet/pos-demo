<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="card-title mb-0">Products</h5>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addProductModal">
            Add Product
        </button>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Price</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% products.forEach(function(product) { %>
                        <tr>
                            <td><%= product.name %></td>
                            <td><%= product.description %></td>
                            <td>$<%= product.price.toFixed(2) %></td>
                            <td>
                                <button class="btn btn-sm btn-outline-primary edit-product" 
                                        data-id="<%= product.id %>"
                                        data-name="<%= product.name %>"
                                        data-description="<%= product.description %>"
                                        data-price="<%= product.price %>">
                                    Edit
                                </button>
                                <button class="btn btn-sm btn-outline-danger delete-product" 
                                        data-id="<%= product.id %>"
                                        data-name="<%= product.name %>">
                                    Delete
                                </button>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Add Product Modal -->
<div class="modal fade" id="addProductModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addProductForm">
                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input type="text" class="form-control" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" name="description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Price</label>
                        <input type="number" class="form-control" name="price" step="0.01" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveProductBtn">Save Product</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Product Modal -->
<div class="modal fade" id="editProductModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editProductForm">
                    <input type="hidden" name="id">
                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input type="text" class="form-control" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" name="description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Price</label>
                        <input type="number" class="form-control" name="price" step="0.01" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="updateProductBtn">Update Product</button>
            </div>
        </div>
    </div>
</div>

<script>
// Add Product
document.getElementById('saveProductBtn').addEventListener('click', async () => {
    const form = document.getElementById('addProductForm');
    const formData = new FormData(form);
    
    try {
        const response = await fetch('/api/products', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(Object.fromEntries(formData))
        });
        
        if (response.ok) {
            window.location.reload();
        } else {
            alert('Failed to add product');
        }
    } catch (error) {
        console.error('Error adding product:', error);
        alert('Failed to add product');
    }
});

// Edit Product
document.querySelectorAll('.edit-product').forEach(button => {
    button.addEventListener('click', () => {
        const form = document.getElementById('editProductForm');
        form.id.value = button.dataset.id;
        form.name.value = button.dataset.name;
        form.description.value = button.dataset.description;
        form.price.value = button.dataset.price;
        
        const modal = new bootstrap.Modal(document.getElementById('editProductModal'));
        modal.show();
    });
});

document.getElementById('updateProductBtn').addEventListener('click', async () => {
    const form = document.getElementById('editProductForm');
    const formData = new FormData(form);
    const productId = formData.get('id');
    
    try {
        const response = await fetch(`/api/products/${productId}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(Object.fromEntries(formData))
        });
        
        if (response.ok) {
            window.location.reload();
        } else {
            alert('Failed to update product');
        }
    } catch (error) {
        console.error('Error updating product:', error);
        alert('Failed to update product');
    }
});

// Delete Product
document.querySelectorAll('.delete-product').forEach(button => {
    button.addEventListener('click', async () => {
        const id = button.dataset.id;
        const name = button.dataset.name;
        
        if (confirm(`Are you sure you want to delete "${name}"?`)) {
            try {
                const response = await fetch(`/api/products/${id}`, {
                    method: 'DELETE'
                });
                
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Failed to delete product');
                }
            } catch (error) {
                console.error('Error deleting product:', error);
                alert('Failed to delete product');
            }
        }
    });
});
</script> 